/*
NetBox REST API

Testing PluginsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package netbox

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/netbox-community/go-netbox/v4"
)

func Test_netbox_PluginsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsBulkDestroy", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsBulkDestroy(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsBulkPartialUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsBulkPartialUpdate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsBulkUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsBulkUpdate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsDestroy", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsDestroy(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsPartialUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsPartialUpdate(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsRetrieve", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsRetrieve(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxAttachmentsNetboxAttachmentsUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxAttachmentsNetboxAttachmentsUpdate(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxTopologyViewsImagesList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxTopologyViewsImagesList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxTopologyViewsImagesRetrieve", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxTopologyViewsImagesRetrieve(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxTopologyViewsImagesSaveCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxTopologyViewsImagesSaveCreate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxTopologyViewsSaveCoordsList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxTopologyViewsSaveCoordsList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxTopologyViewsSaveCoordsRetrieve", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxTopologyViewsSaveCoordsRetrieve(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxTopologyViewsSaveCoordsSaveCoordsPartialUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxTopologyViewsSaveCoordsSaveCoordsPartialUpdate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PluginsAPIService PluginsNetboxTopologyViewsXmlExportList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PluginsAPI.PluginsNetboxTopologyViewsXmlExportList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}

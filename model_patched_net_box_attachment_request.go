/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.1.4 (4.1)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"os"
)

// checks if the PatchedNetBoxAttachmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedNetBoxAttachmentRequest{}

// PatchedNetBoxAttachmentRequest Adds support for custom fields and tags.
type PatchedNetBoxAttachmentRequest struct {
	ObjectType           *string   `json:"object_type,omitempty"`
	ObjectId             *int64    `json:"object_id,omitempty"`
	Name                 *string   `json:"name,omitempty"`
	Description          *string   `json:"description,omitempty"`
	File                 **os.File `json:"file,omitempty"`
	Comments             *string   `json:"comments,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedNetBoxAttachmentRequest PatchedNetBoxAttachmentRequest

// NewPatchedNetBoxAttachmentRequest instantiates a new PatchedNetBoxAttachmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedNetBoxAttachmentRequest() *PatchedNetBoxAttachmentRequest {
	this := PatchedNetBoxAttachmentRequest{}
	return &this
}

// NewPatchedNetBoxAttachmentRequestWithDefaults instantiates a new PatchedNetBoxAttachmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedNetBoxAttachmentRequestWithDefaults() *PatchedNetBoxAttachmentRequest {
	this := PatchedNetBoxAttachmentRequest{}
	return &this
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *PatchedNetBoxAttachmentRequest) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedNetBoxAttachmentRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *PatchedNetBoxAttachmentRequest) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *PatchedNetBoxAttachmentRequest) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *PatchedNetBoxAttachmentRequest) GetObjectId() int64 {
	if o == nil || IsNil(o.ObjectId) {
		var ret int64
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedNetBoxAttachmentRequest) GetObjectIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *PatchedNetBoxAttachmentRequest) HasObjectId() bool {
	if o != nil && !IsNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int64 and assigns it to the ObjectId field.
func (o *PatchedNetBoxAttachmentRequest) SetObjectId(v int64) {
	o.ObjectId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedNetBoxAttachmentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedNetBoxAttachmentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedNetBoxAttachmentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedNetBoxAttachmentRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedNetBoxAttachmentRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedNetBoxAttachmentRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedNetBoxAttachmentRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedNetBoxAttachmentRequest) SetDescription(v string) {
	o.Description = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *PatchedNetBoxAttachmentRequest) GetFile() *os.File {
	if o == nil || IsNil(o.File) {
		var ret *os.File
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedNetBoxAttachmentRequest) GetFileOk() (**os.File, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *PatchedNetBoxAttachmentRequest) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given *os.File and assigns it to the File field.
func (o *PatchedNetBoxAttachmentRequest) SetFile(v *os.File) {
	o.File = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedNetBoxAttachmentRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedNetBoxAttachmentRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedNetBoxAttachmentRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedNetBoxAttachmentRequest) SetComments(v string) {
	o.Comments = &v
}

func (o PatchedNetBoxAttachmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedNetBoxAttachmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectType) {
		toSerialize["object_type"] = o.ObjectType
	}
	if !IsNil(o.ObjectId) {
		toSerialize["object_id"] = o.ObjectId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedNetBoxAttachmentRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedNetBoxAttachmentRequest := _PatchedNetBoxAttachmentRequest{}

	err = json.Unmarshal(data, &varPatchedNetBoxAttachmentRequest)

	if err != nil {
		return err
	}

	*o = PatchedNetBoxAttachmentRequest(varPatchedNetBoxAttachmentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "object_type")
		delete(additionalProperties, "object_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "file")
		delete(additionalProperties, "comments")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedNetBoxAttachmentRequest struct {
	value *PatchedNetBoxAttachmentRequest
	isSet bool
}

func (v NullablePatchedNetBoxAttachmentRequest) Get() *PatchedNetBoxAttachmentRequest {
	return v.value
}

func (v *NullablePatchedNetBoxAttachmentRequest) Set(val *PatchedNetBoxAttachmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedNetBoxAttachmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedNetBoxAttachmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedNetBoxAttachmentRequest(val *PatchedNetBoxAttachmentRequest) *NullablePatchedNetBoxAttachmentRequest {
	return &NullablePatchedNetBoxAttachmentRequest{value: val, isSet: true}
}

func (v NullablePatchedNetBoxAttachmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedNetBoxAttachmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
